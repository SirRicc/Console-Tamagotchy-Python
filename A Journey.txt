
#Problems And Solutions

A couple minuntes ago I completed my basic game which works like this:
-Give your Dog a name
-He gets older
-Nobody can feed him yet
-He gets older
-He dies from starvation

I need an interface to feed him! My first idea was to add an interact function onto the end my gameloop.
This interact function should take an input, check it against some preset values, may execute 
some code (while not pausing my gameloop) and continue. But as you might guess, - it paused.

Research:
{
	"problem": "breaking game loop",
	"website": "Google",
	"search term": "python dont wait for inpout in while loop",
	"source": {
		"first": "https://stackoverflow.com/questions/20576960/python-infinite-while-loop-break-on-user-input",
		"second": "https://stackoverflow.com/questions/19846332/python-threading-inside-a-class"
	},
	"hint": {
		"topic": "threading",
		"code": "threading.Thread(target=self._func_to_be_threaded).start()"
	},
	"newToMe": "absolute"
}


Threading turned out to be an overall usefull mechanic, but the most usefull part for me is that I can listen to 
an input while still execute the gameloop.
Let's outsource my interact function to a new .py file called event_listener and run both of them simultaniously.
Afterwards they should be able to communicate.
